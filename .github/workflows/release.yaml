on: 
  release:
    types: [created]

jobs:
  releases:
    name: release binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin, freebsd, openbsd]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: freebsd
          - goarch: arm64
            goos: openbsd
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-go@v3
      with:
        go-version: '>=1.18.0'
    - uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Build Frontend
      run: |
        cd frontend
        npm install
        npm run build
        cd ..
    - name: Build and Package
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOPROXY: "https://proxy.golang.org,direct"
      run: |
        # Build the binary (Makefile handles the name and extension)
        make build
        
        # Determine binary name after build
        BINARY_NAME="sshman"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="sshman.exe"
        fi
        
        # Package the binary
        ASSET_NAME="sshman-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz"
        tar -czvf "${ASSET_NAME}" ${BINARY_NAME}
        
        # Store asset path for the release step
        echo "ASSET_PATH=${ASSET_NAME}" >> $GITHUB_ENV

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        build_command: "make build"
        pre_command: "make frontend"
